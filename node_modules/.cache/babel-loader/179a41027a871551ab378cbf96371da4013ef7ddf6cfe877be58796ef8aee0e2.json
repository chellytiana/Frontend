{"ast":null,"code":"var _jsxFileName = \"/Users/chellissa/project-1-chellytiana/src/Components/User.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { Link } from 'react-router-dom';\n// import userImage from '../assets/user.jpg'; \n\n// // Dummy user data\n// const users = [\n//   {\n//     id: 1,\n//     name: 'Chelsea Lynch',\n//     major: 'Computer Science',\n//     school: 'Stetson University',\n//     employmentStatus: 'Student Intern',\n//     location: 'Deland, FL',\n//     profilePhoto: userImage, \n//   },\n//   {\n//     id: 2,\n//     name: 'Lui McFarlane',\n//     major: 'Engineering',\n//     school: 'Stetson University',\n//     employmentStatus: 'Student Intern',\n//     location: 'Orlando, FL',\n//     profilePhoto: userImage, \n//   },\n//   {\n//     id: 3,\n//     name: 'Kim McFarlane',\n//     major: 'Cybersecurity',\n//     school: 'Stetson University',\n//     employmentStatus: 'Employed',\n//     location: 'Apopka, FL',\n//     profilePhoto: userImage, \n//   },\n//   {\n//     id: 4,\n//     name: 'Keely Reid',\n//     major: 'Economics',\n//     school: 'Stetson University',\n//     employmentStatus: 'Unemployed',\n//     location: 'Deltona, FL',\n//     profilePhoto: userImage, \n//   },\n\n// ];\n\n// const User = () => {\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const usersPerPage = 3;\n\n//   const indexOfLastUser = currentPage * usersPerPage;\n//   const indexOfFirstUser = indexOfLastUser - usersPerPage;\n//   const currentUsers = users.slice(indexOfFirstUser, indexOfLastUser);\n\n//   const totalPages = Math.ceil(users.length / usersPerPage);\n\n//   const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h1>Users</h1>\n//       <div className=\"row\">\n//         {currentUsers.map((user) => (\n//           <div key={user.id} className=\"col-md-4 mb-4\">\n//             <div className=\"card\">\n//               <img\n//                 src={user.profilePhoto}\n//                 alt={user.name}\n//                 className=\"card-img-top\"\n//                 style={{ height: '200px', objectFit: 'cover' }}\n//               />\n//               <div className=\"card-body\">\n//                 <h5 className=\"card-title\">{user.name}</h5>\n//                 <p className=\"card-text\">\n//                   Major: {user.major}<br />\n//                   School: {user.school}<br />\n//                   Employment Status: {user.employmentStatus}<br />\n//                   Location: {user.location}\n//                 </p>\n//                 <Link to={`/user/${user.id}`} className=\"btn btn-primary\">View Profile</Link>\n//               </div>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Pagination */}\n//       <nav>\n//         <ul className=\"pagination justify-content-center\">\n//           {[...Array(totalPages)].map((_, index) => (\n//             <li key={index + 1} className={`page-item ${currentPage === index + 1 ? 'active' : ''}`}>\n//               <button className=\"page-link\" onClick={() => paginate(index + 1)}>\n//                 {index + 1}\n//               </button>\n//             </li>\n//           ))}\n//         </ul>\n//       </nav>\n//     </div>\n//   );\n// };\n\n// export default User;\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Fetch user data from API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = () => {\n  _s();\n  const [usersData, setUsersData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const usersPerPage = 3;\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const fetchUsers = async () => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await fetch('http://138.197.99.80:2490/api/users', {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setUsersData(data); // Set the fetched user data into the state\n      } else {\n        console.error('Failed to fetch users. Status:', response.status);\n      }\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n\n  // Pagination logic\n  const indexOfLastUser = currentPage * usersPerPage;\n  const indexOfFirstUser = indexOfLastUser - usersPerPage;\n  const currentUsers = usersData.slice(indexOfFirstUser, indexOfLastUser);\n  const totalPages = Math.ceil(usersData.length / usersPerPage);\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: currentUsers.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.profilePhoto,\n            alt: user.name,\n            className: \"card-img-top\",\n            style: {\n              height: '200px',\n              objectFit: 'cover'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Major: \", user.major, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 38\n              }, this), \"School: \", user.school, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 40\n              }, this), \"Employment Status: \", user.employmentStatus, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 61\n              }, this), \"Location: \", user.location]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/user/${user.id}`,\n              className: \"btn btn-primary\",\n              children: \"View Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination justify-content-center\",\n        children: [...Array(totalPages)].map((_, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item ${currentPage === index + 1 ? 'active' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"page-link\",\n            onClick: () => paginate(index + 1),\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)\n        }, index + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(User, \"XQgTFOfaJsq4+UZtaQsWNYbjxJ8=\");\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","User","_s","usersData","setUsersData","currentPage","setCurrentPage","usersPerPage","fetchUsers","token","localStorage","getItem","response","fetch","method","headers","Authorization","ok","data","json","console","error","status","indexOfLastUser","indexOfFirstUser","currentUsers","slice","totalPages","Math","ceil","length","paginate","pageNumber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","src","profilePhoto","alt","name","style","height","objectFit","major","school","employmentStatus","location","to","id","Array","_","index","onClick","_c","$RefreshReg$"],"sources":["/Users/chellissa/project-1-chellytiana/src/Components/User.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { Link } from 'react-router-dom';\n// import userImage from '../assets/user.jpg'; \n\n// // Dummy user data\n// const users = [\n//   {\n//     id: 1,\n//     name: 'Chelsea Lynch',\n//     major: 'Computer Science',\n//     school: 'Stetson University',\n//     employmentStatus: 'Student Intern',\n//     location: 'Deland, FL',\n//     profilePhoto: userImage, \n//   },\n//   {\n//     id: 2,\n//     name: 'Lui McFarlane',\n//     major: 'Engineering',\n//     school: 'Stetson University',\n//     employmentStatus: 'Student Intern',\n//     location: 'Orlando, FL',\n//     profilePhoto: userImage, \n//   },\n//   {\n//     id: 3,\n//     name: 'Kim McFarlane',\n//     major: 'Cybersecurity',\n//     school: 'Stetson University',\n//     employmentStatus: 'Employed',\n//     location: 'Apopka, FL',\n//     profilePhoto: userImage, \n//   },\n//   {\n//     id: 4,\n//     name: 'Keely Reid',\n//     major: 'Economics',\n//     school: 'Stetson University',\n//     employmentStatus: 'Unemployed',\n//     location: 'Deltona, FL',\n//     profilePhoto: userImage, \n//   },\n  \n// ];\n\n// const User = () => {\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const usersPerPage = 3;\n\n  \n//   const indexOfLastUser = currentPage * usersPerPage;\n//   const indexOfFirstUser = indexOfLastUser - usersPerPage;\n//   const currentUsers = users.slice(indexOfFirstUser, indexOfLastUser);\n\n//   const totalPages = Math.ceil(users.length / usersPerPage);\n\n//   const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h1>Users</h1>\n//       <div className=\"row\">\n//         {currentUsers.map((user) => (\n//           <div key={user.id} className=\"col-md-4 mb-4\">\n//             <div className=\"card\">\n//               <img\n//                 src={user.profilePhoto}\n//                 alt={user.name}\n//                 className=\"card-img-top\"\n//                 style={{ height: '200px', objectFit: 'cover' }}\n//               />\n//               <div className=\"card-body\">\n//                 <h5 className=\"card-title\">{user.name}</h5>\n//                 <p className=\"card-text\">\n//                   Major: {user.major}<br />\n//                   School: {user.school}<br />\n//                   Employment Status: {user.employmentStatus}<br />\n//                   Location: {user.location}\n//                 </p>\n//                 <Link to={`/user/${user.id}`} className=\"btn btn-primary\">View Profile</Link>\n//               </div>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Pagination */}\n//       <nav>\n//         <ul className=\"pagination justify-content-center\">\n//           {[...Array(totalPages)].map((_, index) => (\n//             <li key={index + 1} className={`page-item ${currentPage === index + 1 ? 'active' : ''}`}>\n//               <button className=\"page-link\" onClick={() => paginate(index + 1)}>\n//                 {index + 1}\n//               </button>\n//             </li>\n//           ))}\n//         </ul>\n//       </nav>\n//     </div>\n//   );\n// };\n\n// export default User;\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Fetch user data from API\nconst User = () => {\n  const [usersData, setUsersData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const usersPerPage = 3;\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const fetchUsers = async () => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await fetch('http://138.197.99.80:2490/api/users', {\n        method: 'GET',\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setUsersData(data); // Set the fetched user data into the state\n      } else {\n        console.error('Failed to fetch users. Status:', response.status);\n      }\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n\n  // Pagination logic\n  const indexOfLastUser = currentPage * usersPerPage;\n  const indexOfFirstUser = indexOfLastUser - usersPerPage;\n  const currentUsers = usersData.slice(indexOfFirstUser, indexOfLastUser);\n  const totalPages = Math.ceil(usersData.length / usersPerPage);\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  return (\n    <div className=\"container mt-5\">\n      <h1>Users</h1>\n\n      <div className=\"row\">\n        {currentUsers.map((user) => (\n          <div key={user.id} className=\"col-md-4 mb-4\">\n            <div className=\"card\">\n              <img\n                src={user.profilePhoto}\n                alt={user.name}\n                className=\"card-img-top\"\n                style={{ height: '200px', objectFit: 'cover' }}\n              />\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">{user.name}</h5>\n                <p className=\"card-text\">\n                  Major: {user.major}<br />\n                  School: {user.school}<br />\n                  Employment Status: {user.employmentStatus}<br />\n                  Location: {user.location}\n                </p>\n                <Link to={`/user/${user.id}`} className=\"btn btn-primary\">\n                  View Profile\n                </Link>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Pagination */}\n      <nav>\n        <ul className=\"pagination justify-content-center\">\n          {[...Array(totalPages)].map((_, index) => (\n            <li key={index + 1} className={`page-item ${currentPage === index + 1 ? 'active' : ''}`}>\n              <button className=\"page-link\" onClick={() => paginate(index + 1)}>\n                {index + 1}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default User;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMW,YAAY,GAAG,CAAC;EAEtBV,SAAS,CAAC,MAAM;IACdW,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QAClEC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUP,KAAK;QAAG;MAC9C,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACK,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClCf,YAAY,CAACc,IAAI,CAAC,CAAC,CAAC;MACtB,CAAC,MAAM;QACLE,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAET,QAAQ,CAACU,MAAM,CAAC;MAClE;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;;EAED;EACA,MAAME,eAAe,GAAGlB,WAAW,GAAGE,YAAY;EAClD,MAAMiB,gBAAgB,GAAGD,eAAe,GAAGhB,YAAY;EACvD,MAAMkB,YAAY,GAAGtB,SAAS,CAACuB,KAAK,CAACF,gBAAgB,EAAED,eAAe,CAAC;EACvE,MAAMI,UAAU,GAAGC,IAAI,CAACC,IAAI,CAAC1B,SAAS,CAAC2B,MAAM,GAAGvB,YAAY,CAAC;EAE7D,MAAMwB,QAAQ,GAAIC,UAAU,IAAK1B,cAAc,CAAC0B,UAAU,CAAC;EAE3D,oBACEhC,OAAA;IAAKiC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BlC,OAAA;MAAAkC,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEdtC,OAAA;MAAKiC,SAAS,EAAC,KAAK;MAAAC,QAAA,EACjBT,YAAY,CAACc,GAAG,CAAEC,IAAI,iBACrBxC,OAAA;QAAmBiC,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC1ClC,OAAA;UAAKiC,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBlC,OAAA;YACEyC,GAAG,EAAED,IAAI,CAACE,YAAa;YACvBC,GAAG,EAAEH,IAAI,CAACI,IAAK;YACfX,SAAS,EAAC,cAAc;YACxBY,KAAK,EAAE;cAAEC,MAAM,EAAE,OAAO;cAAEC,SAAS,EAAE;YAAQ;UAAE;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChD,CAAC,eACFtC,OAAA;YAAKiC,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBlC,OAAA;cAAIiC,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAEM,IAAI,CAACI;YAAI;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC3CtC,OAAA;cAAGiC,SAAS,EAAC,WAAW;cAAAC,QAAA,GAAC,SAChB,EAACM,IAAI,CAACQ,KAAK,eAAChD,OAAA;gBAAAmC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,YACjB,EAACE,IAAI,CAACS,MAAM,eAACjD,OAAA;gBAAAmC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,uBACR,EAACE,IAAI,CAACU,gBAAgB,eAAClD,OAAA;gBAAAmC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,cACtC,EAACE,IAAI,CAACW,QAAQ;YAAA;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB,CAAC,eACJtC,OAAA,CAACF,IAAI;cAACsD,EAAE,EAAE,SAASZ,IAAI,CAACa,EAAE,EAAG;cAACpB,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAAC;YAE1D;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC,GApBEE,IAAI,CAACa,EAAE;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAqBZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGNtC,OAAA;MAAAkC,QAAA,eACElC,OAAA;QAAIiC,SAAS,EAAC,mCAAmC;QAAAC,QAAA,EAC9C,CAAC,GAAGoB,KAAK,CAAC3B,UAAU,CAAC,CAAC,CAACY,GAAG,CAAC,CAACgB,CAAC,EAAEC,KAAK,kBACnCxD,OAAA;UAAoBiC,SAAS,EAAE,aAAa5B,WAAW,KAAKmD,KAAK,GAAG,CAAC,GAAG,QAAQ,GAAG,EAAE,EAAG;UAAAtB,QAAA,eACtFlC,OAAA;YAAQiC,SAAS,EAAC,WAAW;YAACwB,OAAO,EAAEA,CAAA,KAAM1B,QAAQ,CAACyB,KAAK,GAAG,CAAC,CAAE;YAAAtB,QAAA,EAC9DsB,KAAK,GAAG;UAAC;YAAArB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ;QAAC,GAHFkB,KAAK,GAAG,CAAC;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAId,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpC,EAAA,CAjFID,IAAI;AAAAyD,EAAA,GAAJzD,IAAI;AAmFV,eAAeA,IAAI;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}