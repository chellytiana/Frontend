{"ast":null,"code":"var _jsxFileName = \"/Users/chellissa/project-1-chellytiana/src/Components/UserProfile.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import { Container, Card } from 'react-bootstrap';\n// import userImage from '../assets/user.jpg';\n\n// const UserProfile = () => {\n//     const { userId } = useParams(); \n//     const [user, setUser] = useState(null);\n//     const [loading, setLoading] = useState(true);\n\n//     useEffect(() => {\n//         const fetchUsers = async () => {\n//             const token = localStorage.getItem('token');\n//             setLoading(true);\n//             console.log(\"Fetching user with ID:\", userId);\n\n//             try {\n//                 const response = await fetch(\"http://138.197.99.80:2490/api/users\", {\n//                     method: 'GET',\n//                     headers: { Authorization: `Bearer ${token}` },\n//                 });\n\n//                 console.log(\"Response status:\", response.status);\n\n//                 if (!response.ok) {\n//                     console.error('Failed to fetch user. Status:', response.status);\n//                     setUser(null);\n//                 } else {\n//                     const data = await response.json();\n//                     console.log(\"User data received:\", data);\n\n//                     const foundUser = data.find(user => user._id === userId);\n//                     if (foundUser) {\n//                         setUser(foundUser); \n//                     } else {\n//                         console.error(\"User not found in the list.\");\n//                         setUser(null);\n//                     }\n//                 }\n//             } catch (error) {\n//                 console.error('Error fetching user:', error);\n//                 setUser(null);\n//             } finally {\n//                 setLoading(false);\n//             }\n//         };\n\n//         if (userId) fetchUsers(); \n//     }, [userId]);\n\n//     if (loading) {\n//         return <div className=\"text-center mt-5\">Loading...</div>;\n//     }\n\n//     if (!user) {\n//         return <div className=\"text-center mt-5\">Error: Unable to load profile.</div>;\n//     }\n\n//     return (\n//         <div className=\"min-vh-100 w-100\">\n//             <Container className=\"d-flex justify-content-center align-items-center mt-5 mb-5\">\n//                 <Card style={{ width: '28rem', paddingTop: '3rem', paddingBottom: '3rem' }}>\n//                     <div className=\"d-flex justify-content-center align-items-center\">\n//                         <Card.Img\n//                             variant=\"top\"\n//                             src={user.profilePhoto || userImage}\n//                             className=\"rounded-circle img-fluid\"\n//                             style={{ height: '220px', width: '240px' }}\n//                         />\n//                     </div>\n//                     <Card.Body>\n//                         <Card.Title>{user.first_name} {user.last_name}</Card.Title>\n//                         <Card.Text><strong>Username:</strong> {user.user_name}</Card.Text>\n//                         <Card.Text><strong>Major:</strong> {user.major}</Card.Text>\n//                         <Card.Text><strong>Graduation Year:</strong> {user.year_graduated}</Card.Text>\n//                         <Card.Text><strong>Company:</strong> {user.company}</Card.Text>\n//                         <Card.Text><strong>Title:</strong> {user.title}</Card.Text>\n//                         <Card.Text><strong>Email:</strong> {user.email}</Card.Text>\n//                         <Card.Text>\n//                             <strong>LinkedIn:</strong> {user.linkedin_link ? (\n//                                 <a href={user.linkedin_link} target=\"_blank\" rel=\"noopener noreferrer\">Profile</a>\n//                             ) : \"No LinkedIn provided\"}\n//                         </Card.Text>\n//                     </Card.Body>\n//                 </Card>\n//             </Container>\n//         </div>\n//     );\n// };\n\n// export default UserProfile;\n\n// import React, { useState, useEffect } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom'; \n// import { Container, Card, Button } from 'react-bootstrap'; \n// import userImage from '../assets/user.jpg';\n\n// const UserProfile = () => {\n//     const { userId } = useParams(); \n//     const navigate = useNavigate(); \n//     const [user, setUser] = useState(null);\n//     const [loading, setLoading] = useState(true);\n\n//     useEffect(() => {\n//         const fetchUsers = async () => {\n//             const token = localStorage.getItem('token');\n//             setLoading(true);\n//             console.log(\"Fetching user with ID:\", userId);\n\n//             try {\n//                 const response = await fetch(\"http://138.197.99.80:2490/api/users\", {\n//                     method: 'GET',\n//                     headers: { Authorization: `Bearer ${token}` },\n//                 });\n\n//                 console.log(\"Response status:\", response.status);\n\n//                 if (!response.ok) {\n//                     console.error('Failed to fetch user. Status:', response.status);\n//                     setUser(null);\n//                 } else {\n//                     const data = await response.json();\n//                     console.log(\"User data received:\", data);\n\n//                     const foundUser = data.find(user => user._id === userId);\n//                     if (foundUser) {\n//                         setUser(foundUser); \n//                     } else {\n//                         console.error(\"User not found in the list.\");\n//                         setUser(null);\n//                     }\n//                 }\n//             } catch (error) {\n//                 console.error('Error fetching user:', error);\n//                 setUser(null);\n//             } finally {\n//                 setLoading(false);\n//             }\n//         };\n\n//         if (userId) fetchUsers(); \n//     }, [userId]);\n\n//     if (loading) {\n//         return <div className=\"text-center mt-5\">Loading...</div>;\n//     }\n\n//     if (!user) {\n//         return <div className=\"text-center mt-5\">Error: Unable to load profile.</div>;\n//     }\n\n//     return (\n//         <div className=\"min-vh-100 w-100\">\n//             <Container className=\"mt-4\">\n//                 <Button variant=\"secondary\" onClick={() => navigate(-1)} className=\"mb-3\">\n//                     ‚Üê Back to Users\n//                 </Button>\n\n//                 <div className=\"d-flex justify-content-center align-items-center mt-5 mb-5\">\n//                     <Card style={{ width: '28rem', paddingTop: '3rem', paddingBottom: '3rem' }}>\n//                         <div className=\"d-flex justify-content-center align-items-center\">\n//                             <Card.Img\n//                                 variant=\"top\"\n//                                 src={user.profilePhoto || userImage}\n//                                 className=\"rounded-circle img-fluid\"\n//                                 style={{ height: '220px', width: '240px' }}\n//                             />\n//                         </div>\n//                         <Card.Body>\n//                             <Card.Title>{user.first_name} {user.last_name}</Card.Title>\n//                             <Card.Text><strong>Username:</strong> {user.user_name}</Card.Text>\n//                             <Card.Text><strong>Major:</strong> {user.major}</Card.Text>\n//                             <Card.Text><strong>Graduation Year:</strong> {user.year_graduated}</Card.Text>\n//                             <Card.Text><strong>Company:</strong> {user.company}</Card.Text>\n//                             <Card.Text><strong>Title:</strong> {user.title}</Card.Text>\n//                             <Card.Text><strong>Email:</strong> {user.email}</Card.Text>\n//                             <Card.Text>\n//                                 <strong>LinkedIn:</strong> {user.linkedin_link ? (\n//                                     <a href={user.linkedin_link} target=\"_blank\" rel=\"noopener noreferrer\">Profile</a>\n//                                 ) : \"No LinkedIn provided\"}\n//                             </Card.Text>\n//                         </Card.Body>\n//                     </Card>\n//                 </div>\n//             </Container>\n//         </div>\n//     );\n// };\n\n// export default UserProfile;\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom'; // Added useNavigate\nimport { Container, Card, Button } from 'react-bootstrap'; // Added Button\nimport userImage from '../assets/user.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProfile = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const navigate = useNavigate(); // Hook for navigation\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const token = localStorage.getItem('token');\n      setLoading(true);\n      console.log(\"Fetching user with ID:\", userId);\n      try {\n        const response = await fetch(\"http://138.197.99.80:2490/api/users\", {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"Response status:\", response.status);\n        if (!response.ok) {\n          console.error('Failed to fetch user. Status:', response.status);\n          setUser(null);\n        } else {\n          const data = await response.json();\n          console.log(\"User data received:\", data);\n          const foundUser = data.find(user => user._id === userId);\n          if (foundUser) {\n            setUser(foundUser);\n          } else {\n            console.error(\"User not found in the list.\");\n            setUser(null);\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching user:', error);\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (userId) fetchUsers();\n  }, [userId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-5\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 16\n    }, this);\n  }\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-5\",\n      children: \"Error: Unable to load profile.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-vh-100 w-100\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => navigate(-1),\n          children: \"\\u2190 Back to Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center align-items-center mt-5 mb-5\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '28rem',\n            paddingTop: '1rem',\n            paddingBottom: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-center align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: user.profilePhoto || userImage,\n              className: \"rounded-circle img-fluid\",\n              style: {\n                height: '220px',\n                width: '240px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: [user.first_name, \" \", user.last_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Username:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 40\n              }, this), \" \", user.user_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Major:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 40\n              }, this), \" \", user.major]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Graduation Year:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 40\n              }, this), \" \", user.year_graduated]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Company:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 40\n              }, this), \" \", user.company]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Title:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 40\n              }, this), \" \", user.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 40\n              }, this), \" \", user.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"LinkedIn:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 33\n              }, this), \" \", user.linkedin_link ? /*#__PURE__*/_jsxDEV(\"a\", {\n                href: user.linkedin_link,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: \"Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 37\n              }, this) : \"No LinkedIn provided\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 9\n  }, this);\n};\n_s(UserProfile, \"lEZWRgtINTXAPbN1/k9OmNplA9Q=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Container","Card","Button","userImage","jsxDEV","_jsxDEV","UserProfile","_s","userId","navigate","user","setUser","loading","setLoading","fetchUsers","token","localStorage","getItem","console","log","response","fetch","method","headers","Authorization","status","ok","error","data","json","foundUser","find","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","style","width","paddingTop","paddingBottom","Img","src","profilePhoto","height","Body","Title","first_name","last_name","Text","user_name","major","year_graduated","company","title","email","linkedin_link","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/chellissa/project-1-chellytiana/src/Components/UserProfile.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import { Container, Card } from 'react-bootstrap';\n// import userImage from '../assets/user.jpg';\n\n// const UserProfile = () => {\n//     const { userId } = useParams(); \n//     const [user, setUser] = useState(null);\n//     const [loading, setLoading] = useState(true);\n\n//     useEffect(() => {\n//         const fetchUsers = async () => {\n//             const token = localStorage.getItem('token');\n//             setLoading(true);\n//             console.log(\"Fetching user with ID:\", userId);\n\n//             try {\n//                 const response = await fetch(\"http://138.197.99.80:2490/api/users\", {\n//                     method: 'GET',\n//                     headers: { Authorization: `Bearer ${token}` },\n//                 });\n\n//                 console.log(\"Response status:\", response.status);\n\n//                 if (!response.ok) {\n//                     console.error('Failed to fetch user. Status:', response.status);\n//                     setUser(null);\n//                 } else {\n//                     const data = await response.json();\n//                     console.log(\"User data received:\", data);\n\n//                     const foundUser = data.find(user => user._id === userId);\n//                     if (foundUser) {\n//                         setUser(foundUser); \n//                     } else {\n//                         console.error(\"User not found in the list.\");\n//                         setUser(null);\n//                     }\n//                 }\n//             } catch (error) {\n//                 console.error('Error fetching user:', error);\n//                 setUser(null);\n//             } finally {\n//                 setLoading(false);\n//             }\n//         };\n\n//         if (userId) fetchUsers(); \n//     }, [userId]);\n\n//     if (loading) {\n//         return <div className=\"text-center mt-5\">Loading...</div>;\n//     }\n\n//     if (!user) {\n//         return <div className=\"text-center mt-5\">Error: Unable to load profile.</div>;\n//     }\n\n//     return (\n//         <div className=\"min-vh-100 w-100\">\n//             <Container className=\"d-flex justify-content-center align-items-center mt-5 mb-5\">\n//                 <Card style={{ width: '28rem', paddingTop: '3rem', paddingBottom: '3rem' }}>\n//                     <div className=\"d-flex justify-content-center align-items-center\">\n//                         <Card.Img\n//                             variant=\"top\"\n//                             src={user.profilePhoto || userImage}\n//                             className=\"rounded-circle img-fluid\"\n//                             style={{ height: '220px', width: '240px' }}\n//                         />\n//                     </div>\n//                     <Card.Body>\n//                         <Card.Title>{user.first_name} {user.last_name}</Card.Title>\n//                         <Card.Text><strong>Username:</strong> {user.user_name}</Card.Text>\n//                         <Card.Text><strong>Major:</strong> {user.major}</Card.Text>\n//                         <Card.Text><strong>Graduation Year:</strong> {user.year_graduated}</Card.Text>\n//                         <Card.Text><strong>Company:</strong> {user.company}</Card.Text>\n//                         <Card.Text><strong>Title:</strong> {user.title}</Card.Text>\n//                         <Card.Text><strong>Email:</strong> {user.email}</Card.Text>\n//                         <Card.Text>\n//                             <strong>LinkedIn:</strong> {user.linkedin_link ? (\n//                                 <a href={user.linkedin_link} target=\"_blank\" rel=\"noopener noreferrer\">Profile</a>\n//                             ) : \"No LinkedIn provided\"}\n//                         </Card.Text>\n//                     </Card.Body>\n//                 </Card>\n//             </Container>\n//         </div>\n//     );\n// };\n\n// export default UserProfile;\n\n// import React, { useState, useEffect } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom'; \n// import { Container, Card, Button } from 'react-bootstrap'; \n// import userImage from '../assets/user.jpg';\n\n// const UserProfile = () => {\n//     const { userId } = useParams(); \n//     const navigate = useNavigate(); \n//     const [user, setUser] = useState(null);\n//     const [loading, setLoading] = useState(true);\n\n//     useEffect(() => {\n//         const fetchUsers = async () => {\n//             const token = localStorage.getItem('token');\n//             setLoading(true);\n//             console.log(\"Fetching user with ID:\", userId);\n\n//             try {\n//                 const response = await fetch(\"http://138.197.99.80:2490/api/users\", {\n//                     method: 'GET',\n//                     headers: { Authorization: `Bearer ${token}` },\n//                 });\n\n//                 console.log(\"Response status:\", response.status);\n\n//                 if (!response.ok) {\n//                     console.error('Failed to fetch user. Status:', response.status);\n//                     setUser(null);\n//                 } else {\n//                     const data = await response.json();\n//                     console.log(\"User data received:\", data);\n\n//                     const foundUser = data.find(user => user._id === userId);\n//                     if (foundUser) {\n//                         setUser(foundUser); \n//                     } else {\n//                         console.error(\"User not found in the list.\");\n//                         setUser(null);\n//                     }\n//                 }\n//             } catch (error) {\n//                 console.error('Error fetching user:', error);\n//                 setUser(null);\n//             } finally {\n//                 setLoading(false);\n//             }\n//         };\n\n//         if (userId) fetchUsers(); \n//     }, [userId]);\n\n//     if (loading) {\n//         return <div className=\"text-center mt-5\">Loading...</div>;\n//     }\n\n//     if (!user) {\n//         return <div className=\"text-center mt-5\">Error: Unable to load profile.</div>;\n//     }\n\n//     return (\n//         <div className=\"min-vh-100 w-100\">\n//             <Container className=\"mt-4\">\n//                 <Button variant=\"secondary\" onClick={() => navigate(-1)} className=\"mb-3\">\n//                     ‚Üê Back to Users\n//                 </Button>\n\n//                 <div className=\"d-flex justify-content-center align-items-center mt-5 mb-5\">\n//                     <Card style={{ width: '28rem', paddingTop: '3rem', paddingBottom: '3rem' }}>\n//                         <div className=\"d-flex justify-content-center align-items-center\">\n//                             <Card.Img\n//                                 variant=\"top\"\n//                                 src={user.profilePhoto || userImage}\n//                                 className=\"rounded-circle img-fluid\"\n//                                 style={{ height: '220px', width: '240px' }}\n//                             />\n//                         </div>\n//                         <Card.Body>\n//                             <Card.Title>{user.first_name} {user.last_name}</Card.Title>\n//                             <Card.Text><strong>Username:</strong> {user.user_name}</Card.Text>\n//                             <Card.Text><strong>Major:</strong> {user.major}</Card.Text>\n//                             <Card.Text><strong>Graduation Year:</strong> {user.year_graduated}</Card.Text>\n//                             <Card.Text><strong>Company:</strong> {user.company}</Card.Text>\n//                             <Card.Text><strong>Title:</strong> {user.title}</Card.Text>\n//                             <Card.Text><strong>Email:</strong> {user.email}</Card.Text>\n//                             <Card.Text>\n//                                 <strong>LinkedIn:</strong> {user.linkedin_link ? (\n//                                     <a href={user.linkedin_link} target=\"_blank\" rel=\"noopener noreferrer\">Profile</a>\n//                                 ) : \"No LinkedIn provided\"}\n//                             </Card.Text>\n//                         </Card.Body>\n//                     </Card>\n//                 </div>\n//             </Container>\n//         </div>\n//     );\n// };\n\n// export default UserProfile;\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom'; // Added useNavigate\nimport { Container, Card, Button } from 'react-bootstrap'; // Added Button\nimport userImage from '../assets/user.jpg';\n\nconst UserProfile = () => {\n    const { userId } = useParams(); \n    const navigate = useNavigate(); // Hook for navigation\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchUsers = async () => {\n            const token = localStorage.getItem('token');\n            setLoading(true);\n            console.log(\"Fetching user with ID:\", userId);\n\n            try {\n                const response = await fetch(\"http://138.197.99.80:2490/api/users\", {\n                    method: 'GET',\n                    headers: { Authorization: `Bearer ${token}` },\n                });\n\n                console.log(\"Response status:\", response.status);\n\n                if (!response.ok) {\n                    console.error('Failed to fetch user. Status:', response.status);\n                    setUser(null);\n                } else {\n                    const data = await response.json();\n                    console.log(\"User data received:\", data);\n\n                    const foundUser = data.find(user => user._id === userId);\n                    if (foundUser) {\n                        setUser(foundUser); \n                    } else {\n                        console.error(\"User not found in the list.\");\n                        setUser(null);\n                    }\n                }\n            } catch (error) {\n                console.error('Error fetching user:', error);\n                setUser(null);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        if (userId) fetchUsers(); \n    }, [userId]);\n\n    if (loading) {\n        return <div className=\"text-center mt-5\">Loading...</div>;\n    }\n\n    if (!user) {\n        return <div className=\"text-center mt-5\">Error: Unable to load profile.</div>;\n    }\n\n    return (\n        <div className=\"min-vh-100 w-100\">\n            <Container className=\"mt-4\">\n                {/* Back Button - Positioned to the left */}\n                <div className=\"d-flex\">\n                    <Button variant=\"secondary\" onClick={() => navigate(-1)}>\n                        ‚Üê Back to Users\n                    </Button>\n                </div>\n\n                {/* User Profile Card */}\n                <div className=\"d-flex justify-content-center align-items-center mt-5 mb-5\">\n                    <Card style={{ width: '28rem', paddingTop: '1rem', paddingBottom: '1rem' }}>\n                        <div className=\"d-flex justify-content-center align-items-center\">\n                            <Card.Img\n                                variant=\"top\"\n                                src={user.profilePhoto || userImage}\n                                className=\"rounded-circle img-fluid\"\n                                style={{ height: '220px', width: '240px' }}\n                            />\n                        </div>\n                        <Card.Body>\n                            <Card.Title>{user.first_name} {user.last_name}</Card.Title>\n                            <Card.Text><strong>Username:</strong> {user.user_name}</Card.Text>\n                            <Card.Text><strong>Major:</strong> {user.major}</Card.Text>\n                            <Card.Text><strong>Graduation Year:</strong> {user.year_graduated}</Card.Text>\n                            <Card.Text><strong>Company:</strong> {user.company}</Card.Text>\n                            <Card.Text><strong>Title:</strong> {user.title}</Card.Text>\n                            <Card.Text><strong>Email:</strong> {user.email}</Card.Text>\n                            <Card.Text>\n                                <strong>LinkedIn:</strong> {user.linkedin_link ? (\n                                    <a href={user.linkedin_link} target=\"_blank\" rel=\"noopener noreferrer\">Profile</a>\n                                ) : \"No LinkedIn provided\"}\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </Container>\n        </div>\n    );\n};\n\nexport default UserProfile;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAC3D,SAASC,SAAS,EAAEC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB,CAAC,CAAC;AAC3D,OAAOC,SAAS,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAO,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC9B,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}